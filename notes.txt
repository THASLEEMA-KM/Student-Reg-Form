import React, { useState } from 'react'
import { Button, TextField,Stack,FormControl,InputLabel,Select,MenuItem } from '@mui/material'

function Form() {
    const [firstname,setFirstName] = useState("")
    const [lastName,setLastName] = useState("")
    const [address,setAddress] = useState("")
    const [mobileNumber,setMobileNumber] = useState("")
    const [email,setEmail] = useState("")
    const [password,setPassword] = useState("")
    // const [dob,setDOB] = useState(new Date())
    // const [gender,setGender] = useState("")
    // const [course,setCourse]= useState("")

    const [options,setOptions] = useState({
        dob: '',
        course: '',
        gender: '',
      });

    const [isFirstNameInValid,setIsFirstNameInValid] = useState(false)
    const [isLastNameInValid,setIsLastNameInValid] = useState(false)
    const [isAddressInValid,setIsAddressInValid] = useState(false)
    const [isMobileNumberInValid,setIsMobileNumberInValid] = useState(false)
    const [isEmailInValid,setIsEmailInvalid] = useState(false)
    const [isPasswordInValid,setIsPasswordInValid] = useState(false)
    // const [isDOBInValid,setIsDOBInValid] = useState(false)
    // const [isGenderInValid,setIsGenderInValid] = useState(false)
    // const [isCourseInValid,setIsCourseInValid] = useState(false)

    // const handleChange = ()=>
    // {
    //     console.log("nb");
    // }

    const handleInputValidation= (tag)=>
    {
        const {name,value} = tag
        // console.log(name,value);
        console.log(/^[a-zA-Z]+ [a-zA-Z]+$/);
        // console.log(!!value.match(/^[a-zA-Z]+ [a-zA-Z]+$/));
        // Name validation
        if(!!value.match(/^[a-zA-Z ]{2,30}$/))
        {
            if(name=='firstName')
            {
                setFirstName(value)
                setIsFirstNameInValid(false)
            }
            else if(name=='lastName'){
                setLastName(value)
                setIsLastNameInValid(false)   
            }
        }
        else{
            if(name=='firstName')
            {
                setFirstName(value)
                setIsFirstNameInValid(true)
            }
            else if(name=='lastName'){
                setLastName(value)
                setIsLastNameInValid(true)   
            }
        }
        // address validation
        if(!!value.match(/^[a-zA-Z0-9\s,'-]*$/))
        {
            if(name=='address')
            {
                setAddress(value)
                setIsAddressInValid(false)
            }
        }
        else{
            if(name=='address')
            {
                setAddress(value)
                setIsAddressInValid(true)
            }
        }
        // mobilenumber validation
        if(!!value.match(/^\+?([0-9]{2})\)?[-. ]?([0-9]{5})[-. ]?([0-9]{5})$/))
        {
            if(name=='mobilenumber')
            {
                setMobileNumber(value)
                setIsMobileNumberInValid(false)
            }
        }
        else{
            if(name=='mobilenumber')
            {
                setMobileNumber(value)
                setIsMobileNumberInValid(true)
            }
        }
        // password validation
        if (!!value.match(/^[a-zA-Z0-9!@#$%^&*]{6,16}$/))
        {
            if(name=='password')
            {
                setPassword(value)
                setIsPasswordInValid(false)
            }
        }
        else
        {
            if(name=='password')
            {
                setPassword(value)
                setIsPasswordInValid(true)
            }
        }
        // email validation
        if(!!value.match(/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/))
        {
            if(name=='email')
            {
                setEmail(value)
                setIsEmailInvalid(false)
            }
        }
        else{
            if(name=='email')
            {
                setEmail(value)
                setIsEmailInvalid(true)
            }
        }
        if(name=='gender')
        {
            setGender(value)
            console.log(value);
            
        }
        
        // if(!!value.match(/^[a-zA-Z]+ [a-zA-Z]+$/))

        // {
        //     if(name=='firstName')
        //     {
        //         setFirstName(value)
        //         setIsFirstNameInValid(false)
        //     }
        //     else if(name=='lastName')
        //     {
        //         setLastName(value)
        //         setIsLastNameInValid(false)
        //     }
        //     else if(name=='address')
        //     {
        //         setAddress(value)
        //         setIsAddressInValid(false)
        //     }
        //     else if(name=='mobileNumber')
        //     {
        //         setMobileNumber(value)
        //         setIsMobileNumberInValid(false)
        //     }
        //     else if(name=='email')
        //     {
        //         setEmail(value)
        //         setIsEmailInvalid(false)
        //     }
        //     else if(name=='password')
        //     {
        //         setPassword(value)
        //         setIsPasswordInValid(false)
        //     }
        //     else if(name=='dob')
        //     {
        //         setDOB(value)
        //         setIsDOBInValid(false)
        //     }
        //     else if(name=='gender')
        //     {
        //         setGender(value)
        //         setIsGenderInValid(false)
        //     }
        //     else(name=='course')
        //     {
        //         setCourse(value)
        //         setIsCourseInValid(false)
        //     }

        // }
        // else
        // {
        //     if(name=='firstName')
        //     {
        //         setFirstName(value)
        //         setIsFirstNameInValid(true)
        //     }  
        //     else if(name=='lastName')
        //     {
        //         setLastName(value)
        //         setIsLastNameInValid(true)
        //     }
        //     else if(name=='address')
        //     {
        //         setAddress(value)
        //         setIsAddressInValid(true)
        //     }
        //     else if(name=='mobilenumber')
        //     {
        //         setMobileNumber(value)
        //         setIsMobileNumberInValid(true)
        //     }
        //     else if(name=='email')
        //     {
        //         setEmail(value)
        //         setIsEmailInvalid(true)
        //     }
        //     else if(name=='password')
        //     {
        //         setPassword(value)
        //         setIsPasswordInValid(true)
        //     }
        //     else if(name=='dob')
        //     {
        //         setDOB(value)
        //         setIsDOBInValid(true)
        //     }
        //     else if(name=='gender')
        //     {
        //         setGender(value)
        //         setIsGenderInValid(true)
        //     }
        //     else(name=='course')
        //     {
        //         setCourse(value)
        //         setIsCourseInValid(true)
        //     }
        // }
    }
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setOptions({
          ...options,
          [name]: value,
        });
      };


    const handleRegister=()=>{


        // console.log("Button clicked");
        if(firstname && lastName && address && mobileNumber && email && password && options.dob && options.gender && options.course)
        {
        // console.log("ok");
        alert("Successfully Registered!!!")
        }
        else
        {
            alert("Please fill the Form Completely!!!")
        }
      
       }
       const handleCancel = ()=>

       {
        // alert("hgdf")
        setFirstName("")
        setLastName("")
        setAddress("")
        setMobileNumber("")
        setEmail("")
        setPassword("")
        setOptions("")
        setDOB("")
        setGender()
        setCourse("")
        setIsFirstNameInValid(false)
        setIsLastNameInValid(false)
        setIsAddressInValid(false)
        setIsMobileNumberInValid(false)
        setIsEmailInvalid(false)
        setIsPasswordInValid(false)
        // setIsDOBInValid(false)
        // setIsGenderInValid(false)
        // setIsCourseInValid(false)
       }
      
  return (
<div style={{minHeight:'100vh',width:'100%'}} className='d-flex flex-column mt-5 align-items-center'>
    <div style={{width:'600px'}} className="bg-light p-5 rounded">
            <form >
                <h6>Name</h6>
                <div className="mb-3 d-flex justify-content-between">
                
                <TextField value={firstname || ""} onChange={e=>handleInputValidation(e.target)} name='firstName' id="outlined-basic" label="First Name" variant="outlined"/>
                { isFirstNameInValid &&
                <div className="ps-2 text-danger">Invalid first Name</div>
                }
                <TextField value={lastName || ""} onChange={e=>handleInputValidation(e.target)} name='lastName' id="outlined-basic" label="Last Name" variant="outlined" />
                { isLastNameInValid &&
                <div className="ps-2 text-danger">Invalid last Name</div>
                }
                </div>
               
                <h6>Address</h6>
                <div className="mb-3">
                <TextField value={address || ""} onChange={e=>handleInputValidation(e.target)}  name='address' id="outlined-basic" label="Address" variant="outlined" className='w-100' />
                { isAddressInValid &&
                    <div className="ps-2 text-danger">Invalid Address</div>
                }
                </div>
                <h6>Mobile Number</h6>
                <div className="mb-3">
                <TextField value={mobileNumber || ""} onChange={e=>handleInputValidation(e.target)} name='mobilenumber' id="outlined-basic" label="Mobile Number" variant="outlined" className='w-100' />
                { isMobileNumberInValid &&
                    <div className="ps-2 text-danger">Invalid Phone Number!!!</div>
                }
                </div>
                <h6>Email</h6>
                <div className="mb-3">
                <TextField value={email || ""} onChange={e=>handleInputValidation(e.target)} name='email' id="outlined-basic" label="Email" variant="outlined" className='w-100' />
                { isEmailInValid &&
                    <div className="ps-2 text-danger">Invalid Email!!!</div>
                }
                </div>
                <h6>Password</h6>
                <div className="mb-3">
                <TextField value={password || ""} onChange={e=>handleInputValidation(e.target)} name='password' type='password' id="outlined-basic" label="Password" variant="outlined" className='w-100' />
                { isPasswordInValid &&
                    <div className="ps-2 text-danger">Password should contain atleast one number and one special character,length must from 6 to 16 </div>
                }
                </div>
                <h6>Date of Birth</h6>
                <div className="mb-3">
                <TextField onChange={e=>handleInputValidation(e.target)} type='date' name='dob' id="outlined-basic" label="" variant="outlined" className='w-100' />
                {/* { isDOBInValid &&
                    <div className="ps-2 text-danger">Invalid Date of birth</div>
                } */}
                </div>
                <h6>Gender</h6>
                <div className="mb-3">
                    <input className='ms-4 me-1' onChange={e=>handleInputValidation(e.target)} type="radio" name="gender" value={gender || ""}/>Male
                    <input onChange={e=>handleInputValidation(e.target)} className='ms-4 me-1' type="radio" name="gender" value={gender || ""}/>Female
                    <input onChange={e=>handleInputValidation(e.target)} className='ms-4 me-1'  type="radio" name="gender" value={gender || ""}/>Others
                    
                {/* <RadioGroup  aria-labelledby="demo-radio-buttons-group-label"  name="radio-buttons-group ">
                    <FormControlLabel value="female" name='gender' control={<Radio />} label="Female" />
                    <FormControlLabel value="male" name='gender' control={<Radio />} label="Male" />
                    <FormControlLabel value="other" name='gender' control={<Radio />} label="Other" />
                </RadioGroup> */}
                {/* {
                    isGenderInValid &&
                    <div className="ps-2 text-danger">Invalid gender</div>

                } */}
                </div>
                <h6>Course</h6>
                <div className="mb-3">
                 {/* <FormControl fullWidth>
                    <input  />
                        <select name="" id="">
                            <option selected hidden disabled value="">select one</option>
                            <option value="">Biology</option>
                            <option value="">Computer Science</option>
                            <option value="">Commerce</option>
                            <option value="">Humanities</option>
                        </select>
                 </FormControl> */}
                    <FormControl fullWidth>
                    <InputLabel id="demo-simple-select-label">Course</InputLabel>
                        <Select
                            labelId="demo-simple-select-label"
                            id="demo-simple-select"
                            
                            label="Course"
                            >
                            <MenuItem value={10}>Biology</MenuItem>
                            <MenuItem value={20}>Computer Science</MenuItem>
                            <MenuItem value={30}>Commerce</MenuItem>
                            <MenuItem value={40}>Humanities</MenuItem>

                        </Select>
                    </FormControl>
                    {/* {
                    isCourseInValid &&
                    <div className="ps-2 text-danger">Invalid Course</div>

                } */}
                </div>
                <label htmlFor="dob">Date of Birth:</label>
      <input
        type="date"
        id="dob"
        name="dob"
        value={options.dob || ""}
        onChange={handleInputChange}
        required
      />

      <label htmlFor="course">Select Course:</label>
      <select
        id="course"
        name="course"
        value={options.course || ""}
        onChange={handleInputChange}
        required
      >
        <option value="">Select Course</option>
        <option value="Mathematics">Mathematics</option>
        <option value="Science">Science</option>
        <option value="History">History</option>
        {/* Add more options as needed */}
      </select>

      <label htmlFor="gender">Select Gender:</label>
      <select
        id="gender"
        name="gender"
        value={options.gender || ""}
        onChange={handleInputChange}
        required
      >
        <option value="">Select Gender</option>
        <option value="Male">Male</option>
        <option value="Female">Female</option>
        <option value="Other">Other</option>
        {/* Add more options as needed */}
      </select>

                <Stack direction="row" spacing={2}>
                <Button disabled={isFirstNameInValid || isLastNameInValid || isAddressInValid || isEmailInValid || isMobileNumberInValid || isPasswordInValid} onClick={handleRegister} className='bg-dark' style={{width:'50%',height:'70px' }} variant="contained">REGISTTER</Button>
                <Button style={{width:'50%',height:'70px' }} onClick={handleCancel} variant="outlined">CANCEL</Button>
                </Stack>
    
            </form>
    </div>
    <div style={{width:'600px',minHeight:'100vh'}} className="bg-light mt-2 rounded">
        <h3 className='text-center pt-3'>STUDENT DETAILS</h3>
    </div>

</div>
  )
}

export default Form
